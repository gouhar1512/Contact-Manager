{"version":3,"sources":["components/layout/Navbar.js","context/contact/contactReducer.js","context/types.js","context/contact/ContactState.js","components/contacts/ContactItem.js","components/contacts/Contacts.js","components/contacts/ContactForm.js","components/contacts/ContactFilter.js","components/pages/Home.js","components/pages/About.js","App.js","index.js"],"names":["Navbar","props","title","icon","className","to","defaultProps","state","action","updatedContacts","contacts","type","push","payload","filter","contact","id","currentContact","map","filteredContacts","regex","RegExp","name","match","email","ContactContext","React","createContext","ContactState","useReducer","contactReducer","phone","dispatch","Provider","value","addContact","v4","deleteContact","contactId","setCurrent","clearCurrent","updateContact","filterContacts","text","clearFilter","children","ContactItem","contactContext","useContext","style","float","charAt","toUpperCase","slice","onClick","Contacts","length","key","ContactForm","useEffect","setContact","useState","onChange","e","target","clearAll","autoComplete","onSubmit","preventDefault","placeholder","checked","htmlFor","ContactFilter","useRef","current","ref","split","indexOf","Home","About","App","exact","path","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1d433368.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\nconst Navbar = (props) => {\r\n  const { title, icon } = props;\r\n  return (\r\n    <div>\r\n      <div className=\"navbar bg-primary\">\r\n        <h1>\r\n          <i className={icon} />\r\n          {\" \" + title}\r\n        </h1>\r\n        <ul>\r\n          <li>\r\n            <Link to=\"/contact-manager\">Home</Link>\r\n          </li>\r\n          <li>\r\n            <Link to=\"/contact-manager/about\">About app</Link>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nNavbar.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  icon: PropTypes.string,\r\n};\r\nNavbar.defaultProps = {\r\n  title: \"Contact Keeper\",\r\n  icon: \"fas fa-id-card-alt\",\r\n};\r\n\r\nexport default Navbar;\r\n","import {\r\n  ADD_CONTACT,\r\n  DELETE_CONTACT,\r\n  SET_CURRENT,\r\n  CLEAR_CURRENT,\r\n  UPDATE_CONTACT,\r\n  FILTER_CONTACTS,\r\n  CLEAR_FILTER,\r\n} from \"../types\";\r\n\r\nexport default (state, action) => {\r\n  let updatedContacts = [...state.contacts];\r\n  switch (action.type) {\r\n    case ADD_CONTACT:\r\n      updatedContacts.push(action.payload);\r\n      return {\r\n        ...state,\r\n        contacts: updatedContacts,\r\n      };\r\n    case DELETE_CONTACT:\r\n      updatedContacts = updatedContacts.filter(\r\n        (contact) => contact.id !== action.payload\r\n      );\r\n      return {\r\n        ...state,\r\n        contacts: updatedContacts,\r\n      };\r\n    case SET_CURRENT:\r\n      return {\r\n        ...state,\r\n        currentContact: action.payload,\r\n      };\r\n\r\n    case CLEAR_CURRENT:\r\n      return {\r\n        ...state,\r\n        currentContact: null,\r\n      };\r\n\r\n    case UPDATE_CONTACT:\r\n      updatedContacts = updatedContacts.map((contact) =>\r\n        contact.id === action.payload.id ? action.payload : contact\r\n      );\r\n      return {\r\n        ...state,\r\n        contacts: updatedContacts,\r\n      };\r\n\r\n    case FILTER_CONTACTS:\r\n      return {\r\n        ...state,\r\n        filteredContacts: state.contacts.filter((contact) => {\r\n          const regex = new RegExp(`${action.payload}`, \"gi\");\r\n          return contact.name.match(regex) || contact.email.match(regex);\r\n        }),\r\n      };\r\n\r\n    case CLEAR_FILTER:\r\n      return {\r\n        ...state,\r\n        filteredContacts: null,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","export const GET_CONTACTS = \"GET_CONTACTS\";\r\nexport const ADD_CONTACT = \"ADD_CONTACT\";\r\nexport const DELETE_CONTACT = \"DELETE_CONTACT\";\r\nexport const SET_CURRENT = \"SET_CURRENT\";\r\nexport const CLEAR_CURRENT = \"CLEAR_CURRENT\";\r\nexport const UPDATE_CONTACT = \"UPDATE_CONTACT\";\r\nexport const FILTER_CONTACTS = \"FILTER_CONTACTS\";\r\nexport const CLEAR_CONTACTS = \"CLEAR_CONTACTS\";\r\nexport const CLEAR_FILTER = \"CLEAR_FILTER\";\r\nexport const CONTACT_ERROR = \"CONTACT_ERROR\";\r\nexport const SET_ALERT = \"SET_ALERT\";\r\nexport const REMOVE_ALERT = \"REMOVE_ALERT\";\r\nexport const REGISTER_SUCCESS = \"REGISTER_SUCCESS\";\r\nexport const REGISTER_FAIL = \"REGISTER_FAIL\";\r\nexport const USER_LOADED = \"USER_LOADED\";\r\nexport const AUTH_ERROR = \"AUTH_ERROR\";\r\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\r\nexport const LOGIN_FAIL = \"LOGIN_FAIL\";\r\nexport const LOGOUT = \"LOGOUT\";\r\nexport const CLEAR_ERRORS = \"CLEAR_ERRORS\";\r\n","import React, { useReducer } from \"react\";\r\nimport { v4 } from \"uuid\";\r\nimport contactReducer from \"./contactReducer\";\r\nimport {\r\n  ADD_CONTACT,\r\n  DELETE_CONTACT,\r\n  SET_CURRENT,\r\n  CLEAR_CURRENT,\r\n  UPDATE_CONTACT,\r\n  FILTER_CONTACTS,\r\n  CLEAR_FILTER,\r\n} from \"../types\";\r\n\r\nexport const ContactContext = React.createContext();\r\n\r\nconst ContactState = (props) => {\r\n  const initialState = {\r\n    contacts: [\r\n      {\r\n        id: 1,\r\n        name: \"Jill Jhonson\",\r\n        email: \"jill@gmail.com\",\r\n        phone: \"111-111-1111\",\r\n        type: \"personal\",\r\n      },\r\n\r\n      {\r\n        id: 3,\r\n        name: \"Harry White\",\r\n        email: \"harry@gmail.com\",\r\n        phone: \"333-333-3333\",\r\n        type: \"professional\",\r\n      },\r\n      {\r\n        id: 2,\r\n        name: \"John Doe\",\r\n        email: \"john@gmail.com\",\r\n        phone: \"222-222-2222\",\r\n        type: \"personal\",\r\n      },\r\n    ],\r\n    currentContact: null,\r\n    filteredContacts: null,\r\n  };\r\n\r\n  const [state, dispatch] = useReducer(contactReducer, initialState);\r\n  // useReducer will return updated state\r\n\r\n  // Add Contact\r\n\r\n  const addContact = (contact) => {\r\n    contact.id = v4();\r\n    dispatch({\r\n      type: ADD_CONTACT,\r\n      payload: contact,\r\n    });\r\n  };\r\n\r\n  // Delete Contact\r\n\r\n  const deleteContact = (contactId) => {\r\n    dispatch({\r\n      type: DELETE_CONTACT,\r\n      payload: contactId,\r\n    });\r\n  };\r\n\r\n  // Set Current Contact\r\n\r\n  const setCurrent = (contact) => {\r\n    dispatch({\r\n      type: SET_CURRENT,\r\n      payload: contact,\r\n    });\r\n  };\r\n\r\n  // Clear Current Contact\r\n\r\n  const clearCurrent = () => {\r\n    dispatch({ type: CLEAR_CURRENT });\r\n  };\r\n\r\n  // Update Contact\r\n  const updateContact = (contact) => {\r\n    dispatch({ type: UPDATE_CONTACT, payload: contact });\r\n  };\r\n\r\n  // Filter Contacts\r\n  const filterContacts = (text) => {\r\n    dispatch({ type: FILTER_CONTACTS, payload: text });\r\n  };\r\n\r\n  // Clear Filter\r\n  const clearFilter = () => {\r\n    dispatch({ type: CLEAR_FILTER });\r\n  };\r\n\r\n  return (\r\n    <ContactContext.Provider\r\n      value={{\r\n        contacts: state.contacts,\r\n        currentContact: state.currentContact,\r\n        filteredContacts: state.filteredContacts,\r\n        addContact,\r\n        deleteContact,\r\n        setCurrent,\r\n        clearCurrent,\r\n        updateContact,\r\n        filterContacts,\r\n        clearFilter,\r\n      }}\r\n    >\r\n      {props.children}\r\n    </ContactContext.Provider>\r\n  );\r\n};\r\n\r\nexport default ContactState;\r\n","import React, { useContext } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { ContactContext } from \"../../context/contact/ContactState\";\r\n\r\nconst ContactItem = (props) => {\r\n  const contactContext = useContext(ContactContext);\r\n  const { deleteContact, setCurrent, clearCurrent } = contactContext;\r\n  const { id, name, email, phone, type } = props.contact;\r\n\r\n  const onDelete = () => {\r\n    deleteContact(id);\r\n    clearCurrent();\r\n  };\r\n\r\n  const onEdit = () => {\r\n    setCurrent(props.contact);\r\n  };\r\n\r\n  return (\r\n    <div className=\"card bg-light\">\r\n      <h3 className=\"text-primary text-left\">\r\n        {name}\r\n        <span\r\n          style={{ float: \"right\" }}\r\n          className={\r\n            \"badge \" +\r\n            (type === \"professional\" ? \"badge-success\" : \"badge-primary\")\r\n          }\r\n        >\r\n          {type.charAt(0).toUpperCase() + type.slice(1)}\r\n        </span>\r\n      </h3>\r\n      <ul className=\"list\">\r\n        {email && (\r\n          <li>\r\n            <i className=\"fas fa-envelope-open\"></i> {\" \" + email}\r\n          </li>\r\n        )}\r\n        {phone && (\r\n          <li>\r\n            <i className=\"fas fa-phone\"></i> {\" \" + phone}\r\n          </li>\r\n        )}\r\n      </ul>\r\n      <p>\r\n        <button className=\"btn btn-dark btn-sm\" onClick={onEdit}>\r\n          Edit\r\n        </button>\r\n        <button className=\"btn btn-danger btn-sm\" onClick={onDelete}>\r\n          Delete\r\n        </button>\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nContactItem.propTypes = {\r\n  contact: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default ContactItem;\r\n","import React, { useContext, Fragment } from \"react\";\r\nimport { ContactContext } from \"../../context/contact/ContactState\";\r\nimport ContactItem from \"./ContactItem\";\r\nconst Contacts = () => {\r\n  const contactContext = useContext(ContactContext);\r\n  const { contacts, filteredContacts } = contactContext;\r\n\r\n  if (contacts.length === 0) {\r\n    return <h4>Please add a contact</h4>;\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      {filteredContacts !== null\r\n        ? filteredContacts.map((contact) => (\r\n            <ContactItem key={contact.id} contact={contact} />\r\n          ))\r\n        : contacts.map((contact) => (\r\n            <ContactItem key={contact.id} contact={contact} />\r\n          ))}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Contacts;\r\n","import React, { useState, useContext, useEffect } from \"react\";\r\nimport { ContactContext } from \"../../context/contact/ContactState\";\r\nconst ContactForm = () => {\r\n  const contactContext = useContext(ContactContext);\r\n  const {\r\n    currentContact,\r\n    addContact,\r\n    clearCurrent,\r\n    updateContact,\r\n  } = contactContext;\r\n\r\n  useEffect(() => {\r\n    if (currentContact) {\r\n      setContact(currentContact);\r\n    } else {\r\n      setContact({\r\n        name: \"\",\r\n        email: \"\",\r\n        phone: \"\",\r\n        type: \"personal\",\r\n      });\r\n    }\r\n  }, [currentContact]);\r\n\r\n  const [contact, setContact] = useState({\r\n    name: \"\",\r\n    email: \"\",\r\n    phone: \"\",\r\n    type: \"personal\",\r\n  });\r\n\r\n  const { name, email, phone, type } = contact;\r\n\r\n  const onChange = (e) => {\r\n    setContact({ ...contact, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (currentContact == null) {\r\n      addContact(contact);\r\n    } else {\r\n      updateContact(contact);\r\n    }\r\n    clearAll();\r\n  };\r\n\r\n  const clearAll = () => {\r\n    clearCurrent();\r\n    setContact({\r\n      name: \"\",\r\n      email: \"\",\r\n      phone: \"\",\r\n      type: \"personal\",\r\n    });\r\n  };\r\n\r\n  return (\r\n    <form autoComplete=\"off\" onSubmit={onSubmit}>\r\n      <h2 className=\"text-primary\">\r\n        {currentContact ? \"Update Contact\" : \"Add Contact\"}\r\n      </h2>\r\n      <input\r\n        type=\"text\"\r\n        name=\"name\"\r\n        placeholder=\"Name\"\r\n        value={name}\r\n        onChange={onChange}\r\n      />\r\n      <input\r\n        type=\"email\"\r\n        name=\"email\"\r\n        placeholder=\"Email\"\r\n        value={email}\r\n        onChange={onChange}\r\n      />\r\n      <input\r\n        type=\"text\"\r\n        name=\"phone\"\r\n        placeholder=\"Phone\"\r\n        value={phone}\r\n        onChange={onChange}\r\n      />\r\n      <h5>Contact Type</h5>\r\n      <input\r\n        type=\"radio\"\r\n        name=\"type\"\r\n        value=\"personal\"\r\n        id=\"personal\"\r\n        checked={type === \"personal\"}\r\n        onChange={onChange}\r\n      />\r\n      <label htmlFor=\"personal\">Personal</label>{\" \"}\r\n      <input\r\n        type=\"radio\"\r\n        name=\"type\"\r\n        value=\"professional\"\r\n        id=\"professional\"\r\n        checked={type === \"professional\"}\r\n        onChange={onChange}\r\n      />\r\n      <label htmlFor=\"professional\"> Professional</label>\r\n      <div>\r\n        <input\r\n          type=\"submit\"\r\n          value={currentContact ? \"Update Contact\" : \"Add Contact\"}\r\n          className=\"btn btn-primary btn-block\"\r\n        />\r\n      </div>\r\n      <div>\r\n        {currentContact ? (\r\n          <div>\r\n            <input\r\n              type=\"submit\"\r\n              value=\"Cancel\"\r\n              className=\"btn btn-light btn-block\"\r\n              onClick={clearAll}\r\n            />\r\n          </div>\r\n        ) : null}\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default ContactForm;\r\n","import React, { useContext, useRef, useEffect } from \"react\";\r\nimport { ContactContext } from \"../../context/contact/ContactState\";\r\nconst ContactFilter = () => {\r\n  const contactContext = useContext(ContactContext);\r\n  const text = useRef(\"\");\r\n\r\n  const { filteredContacts, filterContacts, clearFilter } = contactContext;\r\n  useEffect(() => {\r\n    if (filteredContacts == null) {\r\n      text.current.value = \"\";\r\n    }\r\n  });\r\n  const onChange = (e) => {\r\n    if (\r\n      text.current.value !== \"\" &&\r\n      text.current.value.split(\"\").indexOf(\"\\\\\") === -1 &&\r\n      text.current.value.split(\"\").indexOf(\"+\") === -1 &&\r\n      text.current.value.split(\"\").indexOf(\"?\") === -1\r\n    ) {\r\n      filterContacts(e.target.value);\r\n    } else {\r\n      clearFilter();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form>\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Search Contacts\"\r\n        ref={text}\r\n        onChange={onChange}\r\n      />\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default ContactFilter;\r\n","import React from \"react\";\r\nimport Contacts from \"../contacts/Contacts\";\r\nimport ContactForm from \"../contacts/ContactForm\";\r\nimport ContactFilter from \"../contacts/ContactFilter\";\r\nconst Home = () => {\r\n  return (\r\n    <div className=\"grid-2\">\r\n      <div>\r\n        <ContactForm />\r\n      </div>\r\n      <div>\r\n        <ContactFilter />\r\n        <Contacts />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\n\r\nconst About = () => {\r\n  return (\r\n    <div>\r\n      <h1>About this app</h1>\r\n      <p className=\"my-1\">\r\n        This is a full stack React app for keeping contacts\r\n      </p>\r\n      <p className=\"bg-dark p\">\r\n        <strong>Version: </strong>1.0.0\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default About;\r\n","import React, { Fragment } from \"react\";\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport Navbar from \"./components/layout/Navbar\";\r\nimport Home from \"./components/pages/Home\";\r\nimport About from \"./components/pages/About\";\r\n\r\nimport ContactState from \"./context/contact/ContactState\";\r\nimport \"./App.css\";\r\nconst App = () => {\r\n  return (\r\n    <ContactState>\r\n      <Router>\r\n        <Fragment>\r\n          <Navbar />\r\n          <div className=\"container\">\r\n            <Switch>\r\n              <Route exact path=\"/contact-manager/\" component={Home} />\r\n              <Route exact path=\"/contact-manager/about\" component={About} />\r\n            </Switch>\r\n          </div>\r\n        </Fragment>\r\n      </Router>\r\n    </ContactState>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}